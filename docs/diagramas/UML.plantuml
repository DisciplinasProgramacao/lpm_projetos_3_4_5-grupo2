@startuml
skinparam linetype ortho
skinparam classAttributeIconSize 0

class Avaliacao {
        - nota: int
        - comentario: String
        ..
        + Avaliacao(nota: int, comentario: String)
        + Avaliacao(nota: int)
    }

class Cliente {
        - nome: String
        - nomedeUsuario: String
        - senha: String
        - listaParaVer: List<Midia>
        - listaJaVistas: List<Midia>
        - datasExibicao: HashMap<Midia, String>
        - quantAval: int
        ..
        + Cliente()
        + Cliente(nome: String, nomedeUsuario: String, senha: String)
        + ehAdmin(): boolean
        + adicionarNaLista(midia: Midia): void
        + retirarDaLista(nomeMidia: String): void
        + registrarAudiencia(midia: Midia, dataExibicao: String): void
        + ehClienteEspecialista(): boolean
        + imprimeListaParaVer(): void
        + imprimeListaJaVistas(): void
        + filtrarListaJaVistas(nomeMidia: String): ArrayList<Midia>
        + filtrarJaVistasPorGenero(genero: String): ArrayList<Midia>
        + filtrarJaVistasPorIdioma(idioma: String): ArrayList<Midia>
        + filtrarListaParaVer(nomeMidia: String): ArrayList<Midia>
        + filtrarParaVerPorGenero(genero: String): ArrayList<Midia>
        + filtrarParaVerPorIdioma(idioma: String): ArrayList<Midia>
        + calcularQntAvalCliente(): int
        + toString(): String
    }

class Filme {
        - duracao: int
        ..
        + Filme()
        + Filme(idFilme: int, nome: String, dataLancamento: String, duracao: int)
        + Filme(nome: String, genero: Genero, idioma: Idioma, duracao: int, dataLancamento: String)
        + toString(): String
    }

abstract class Midia {
        - genero: Genero
        - idioma: Idioma
        - id: int
        - ultimoId: int
        - nome: String
        - audiencia: int
        - dataLancamento: String
        - avaliacoes: HashMap<String, Avaliacao>
        ..
        + Midia()
        + gerarGeneroAleatorio(): Genero
        + gerarIdiomaAleatorio(): Idioma
        + registraAudiencia()
        + registrarAvaliacao(loginUsuario: String, notaDada: int)
        + registrarAvaliacaoComentario(loginUsuario: String, notaDada: int, comentario: String)
        + verificaAvaliacaoRegistrada(loginUsuario: String)
    }

class MidiaFactory {
        + criarMidia(tipo: String, nome: String, genero: Genero, idioma: Idioma, tempo: int, dataLancamento: String): Midia
        + initMidia(tipo: String, id: int, nome: String, dataLancamento: String, duracao: int): Midia
        + initMidia(tipo: String, id: int, nome: String, dataLancamento: String): Midia
    }

class PlataformaStreaming {
        - nome: String
        - midias: List<Midia>
        - clientes: List<Cliente>
        - clienteAtual: Cliente
        - usuarios: HashMap<String, Cliente>
        ..
        + PlataformaStreaming()
        + PlataformaStreaming(nome: String)
        + buscarMidia(idMidia: int): Midia
        + carregarEspectador(nomeArquivo: String): void
        + carregarSeries(nomeArquivo: String): void
        + carregarFilmes(nomeArquivo: String): void
        + carregarAudiencia(nomeArquivo: String): void
        + login(nomeUsuario: String, senha: String): Cliente
        + adicionarMidia(midia: Midia): void
        + adicionarCliente(cliente: Cliente): void
        + filtrarPorGenero(genero: String): ArrayList<Midia>
        + filtrarPorNome(nomeMidia: String): ArrayList<Midia>
        + filtrarPorIdioma(idioma: String): ArrayList<Midia>
        + registrarAudiencia(m: Midia): int
        + logoff(): void
        + buscarMidia(nomeMidia: String): Midia
        + filtrarPorQntEps(qntEps: int): List<Serie>
        + atualizarArquivo(nomeArquivo: String, novaLinha: String): void
        + PorcentagemClientesMaisQue15Aval(): double
        + buscarMelhoresMidiasAvaliadas(): List<Midia>
        + buscarMidiasMaisAvaliadas(): List<Midia>
        + buscarMidiasMaisAvaliadasPorGenero(): Map<Genero, List<Midia>>
        + buscarMidiasMaisVisu(): List<Midia>
        + buscarMidiasMaisVisuPorGenero(): Map<Genero, List<Midia>>
    }

class Serie {
  - quantidadeDeEpsodios: int
  - idSerie: int
  ..
  + Serie(String, String, String, int, String):
  + toString(): String
}

Midia  <--  PlataformaStreaming
Midia  <|--  Filme
Serie  --|>  Midia
Avaliacao  <--*  Midia
Filme  <--  PlataformaStreaming
Serie  <--  PlataformaStreaming
Cliente  *-->  Midia
PlataformaStreaming  *--> Cliente
@enduml