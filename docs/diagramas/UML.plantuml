@startuml
skinparam linetype ortho
skinparam classAttributeIconSize 0


class Avaliacao {
  - nota: int
  - comentario: String
  ..
  + Avaliacao(nota: int, comentario: String)
  + Avaliacao(nota: int)
}

class Cliente {
  - nome: String
  - nomedeUsuario: String
  - senha: String
  - listaParaVer: List<Midia>
  - listaJaVistas: List<Midia>
  - datasExibicao: HashMap<Midia, String>
  - quantAval: int
  ..
  + Cliente()
  + Cliente(nome: String, nomedeUsuario: String, senha: String)
  + ehAdmin(): boolean
  + adicionarNaLista(midia: Midia): void
  + retirarDaLista(nomeMidia: String): void
  + registrarAudiencia(midia: Midia, dataExibicao: String): void
  + ehClienteEspecialista(): boolean
  + imprimeListaParaVer(): void
  + imprimeListaJaVistas(): void
  + filtrarListaJaVistas(nomeMidia: String): ArrayList<Midia>
  + filtrarJaVistasPorGenero(genero: String): ArrayList<Midia>
  + filtrarJaVistasPorIdioma(idioma: String): ArrayList<Midia>
  + filtrarListaParaVer(nomeMidia: String): ArrayList<Midia>
  + filtrarParaVerPorGenero(genero: String): ArrayList<Midia>
  + filtrarParaVerPorIdioma(idioma: String): ArrayList<Midia>
  + calcularQntAvalCliente(): int
  + toString(): String
}

class Filme extends Midia {
    - idFilme : int
    ..
    + duracao : int
    + toString() : String
}

enum Genero << enumeration >> {
  - Genero(String):
  - descricao: String
  ..
  + values(): Genero[]
  + valueOf(String): Genero
  + findByValue(String): Genero
  + geraGeneroAleatorio(): Genero
   descricao: String
}

enum Idioma << enumeration >> {
  - Idioma(String):
  - descricao: String
  ..
  + valueOf(String): Idioma
  + geraIdiomaAleatorio(): Idioma
  + values(): Idioma[]
  + findByValue(String): Idioma
}

abstract class Midia {
  - genero: Genero
  - idioma: Idioma
  - id: int
  - ultimoId: static int
  - nome: String
  - audiencia: int
  - dataLancamento: String
  - avaliacoes: HashMap<String, Avaliacao>
  ..
  + Midia()
  + gerarGeneroAleatorio(): Genero
  + gerarIdiomaAleatorio(): Idioma
  + registraAudiencia(): int
  + registrarAvaliacao(loginUsuario: String, notaDada: int): void
  + registrarAvaliacaoComentario(loginUsuario: String, notaDada: int, comentario: String): void
  + verificaAvaliacaoRegistrada(loginUsuario: String): boolean
}

class MidiaFactory {
    + criarMidia(tipo: String, nome: String, genero: Genero, idioma: Idioma, tempo: int, dataLancamento: String): Midia
    + initMidia(tipo: String, id: int, nome: String, dataLancamento: String, duracao: int): Midia
}

class PlataformaStreaming {
  + PlataformaStreaming():
  + PlataformaStreaming(String):
  - midias: List<Midia>
  - clienteAtual: Cliente
  - nome: String
  - clientes: List<Cliente>
  ..
  + logoff(): void
  + PorcentagemClientesMaisQue15Aval(): double
  + buscarMelhoresMidiasAvaliadas(): String
  + carregarAudiencia(String): void
  + adicionarMidia(Midia): void
  + filtrarPorGenero(String): ArrayList<Midia>
  + filtrarPorNome(String): ArrayList<Midia>
  + buscarMidiasMaisAvaliadas(): String
  + adicionarCliente(Cliente): void
  + buscarMidia(int): Midia
  + buscarMidiasMaisVisuPorGenero(): String
  + registrarAudiencia(Midia): int
  + login(String, String): Cliente
  + buscarMidia(String): Midia
  + filtrarPorIdioma(String): ArrayList<Midia>
  + filtrarPorQntEps(int): List<Serie>
  + buscarMidiasMaisVisu(): String
  + buscarMidiasMaisAvaliadasPorGenero(): String
  + carregarFilmes(String): void
  + carregarSeries(String): void
  + atualizarArquivo(String, String): void
  + carregarEspectador(String): void
}

class Serie {
  - quantidadeDeEpsodios: int
  - idSerie: int
  ..
  + Serie(int, String, String):
  + Serie(String, Genero, Idioma, int, String):
  + Serie():
  + toString(): String
}

Cliente              -->  Cliente
Cliente              -->  Genero
Cliente              -->  Idioma
Cliente             "1" *--> "listaParaVer\n*" Midia
Filme                -->  Genero
Filme                -->  Idioma
Filme                --^  Midia
Genero               -->  Genero
Idioma               -->  Idioma
Midia               "1" *--> "avaliacoes\n*" Avaliacao
Midia                -->  Avaliacao
Midia               "1" *--> "genero\n1" Genero
Midia               "1" *--> "idioma\n1" Idioma
MidiaFactory         -->  Filme              
MidiaFactory         -->  Genero
MidiaFactory         -->  Idioma
MidiaFactory         -->  Midia
MidiaFactory         -->  Serie
PlataformaStreaming  -->  Cliente
PlataformaStreaming "1" *--> "clientes\n*" Cliente
PlataformaStreaming  -->  Filme
PlataformaStreaming  -->  Genero
PlataformaStreaming  -->  Idioma
PlataformaStreaming "1" *--> "midias\n*" Midia
PlataformaStreaming  -->  MidiaFactory
PlataformaStreaming  -->  PlataformaStreaming
PlataformaStreaming  -->  Serie
Serie                -->  Genero
Serie                -->  Idioma
Serie                --^  Midia
@enduml